{"ast":null,"code":"var _jsxFileName = \"/Users/anaghaapatil/retriver_sih/src/components/ChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MessageCircle, X, Send, Bot, User, Loader } from 'lucide-react';\nimport { chatResponses } from '../data/mockData';\nimport './ChatPanel.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPanel = ({\n  isOpen,\n  onClose,\n  policyTitle\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages are added\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Focus input when panel opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      const welcomeMessage = {\n        id: Date.now(),\n        type: 'ai',\n        content: `Hello! I'm here to help you understand \"${policyTitle}\". You can ask me questions about eligibility, benefits, application process, or any other details about this policy.`,\n        timestamp: new Date()\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [isOpen, policyTitle, messages.length]);\n  const simulateAIResponse = userMessage => {\n    const message = userMessage.toLowerCase();\n\n    // Find matching response based on keywords\n    let response = \"I understand you're asking about this policy. Let me provide you with the most relevant information based on the policy document.\";\n    if (message.includes('eligible') || message.includes('eligibility')) {\n      response = chatResponses[\"who is eligible\"][0];\n    } else if (message.includes('benefit') || message.includes('what do i get')) {\n      response = chatResponses[\"what are the benefits\"][0];\n    } else if (message.includes('apply') || message.includes('how to')) {\n      response = chatResponses[\"how do i apply\"][0];\n    } else if (message.includes('launch') || message.includes('when')) {\n      response = chatResponses[\"when was this policy launched\"][0];\n    } else if (message.includes('budget') || message.includes('cost') || message.includes('fund')) {\n      response = chatResponses[\"what is the budget\"][0];\n    }\n    return response;\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsTyping(true);\n\n    // Simulate AI thinking time\n    setTimeout(() => {\n      const aiResponse = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: simulateAIResponse(inputValue.trim()),\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 1500);\n  };\n  const handleQuickQuestion = question => {\n    setInputValue(question);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const formatTime = timestamp => {\n    return timestamp.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const quickQuestions = [\"Who is eligible?\", \"What are the benefits?\", \"How do I apply?\", \"When was this launched?\", \"What is the budget?\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: () => onClose(!isOpen),\n      \"aria-label\": \"Open chat\",\n      children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n        className: \"chat-button-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), messages.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chat-notification-badge\",\n        children: messages.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-overlay\",\n        onClick: () => onClose(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-icon\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Ask about this policy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"AI Assistant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-close-button\",\n            onClick: () => onClose(false),\n            \"aria-label\": \"Close chat\",\n            children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message chat-message-${message.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message-avatar\",\n              children: message.type === 'user' ? /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(Bot, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-message-text\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-message-time\",\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message chat-message-ai\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message-avatar\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-dots\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), messages.length <= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-quick-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"quick-questions-title\",\n            children: \"Try asking:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-questions-grid\",\n            children: quickQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quick-question-button\",\n              onClick: () => handleQuickQuestion(question),\n              children: question\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input-form\",\n          onSubmit: handleSendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: inputRef,\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              placeholder: \"Type your question...\",\n              className: \"chat-input\",\n              rows: \"1\",\n              onKeyDown: e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(e);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-send-button\",\n              disabled: !inputValue.trim() || isTyping,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                className: \"send-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(ChatPanel, \"8oAAoVcWugnJAl2PzONTfc/0Mqo=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageCircle","X","Send","Bot","User","Loader","chatResponses","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","isOpen","onClose","policyTitle","_s","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","messagesEndRef","inputRef","_messagesEndRef$curre","current","scrollIntoView","behavior","focus","length","welcomeMessage","id","Date","now","type","content","timestamp","simulateAIResponse","userMessage","message","toLowerCase","response","includes","handleSendMessage","e","preventDefault","trim","prev","setTimeout","aiResponse","handleQuickQuestion","question","formatTime","toLocaleTimeString","hour","minute","quickQuestions","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","index","onSubmit","value","onChange","target","placeholder","rows","onKeyDown","key","shiftKey","disabled","_c","$RefreshReg$"],"sources":["/Users/anaghaapatil/retriver_sih/src/components/ChatPanel.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { \n  MessageCircle, \n  X, \n  Send, \n  Bot, \n  User,\n  Loader\n} from 'lucide-react';\nimport { chatResponses } from '../data/mockData';\nimport './ChatPanel.css';\n\nconst ChatPanel = ({ isOpen, onClose, policyTitle }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages are added\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Focus input when panel opens\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      const welcomeMessage = {\n        id: Date.now(),\n        type: 'ai',\n        content: `Hello! I'm here to help you understand \"${policyTitle}\". You can ask me questions about eligibility, benefits, application process, or any other details about this policy.`,\n        timestamp: new Date()\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [isOpen, policyTitle, messages.length]);\n\n  const simulateAIResponse = (userMessage) => {\n    const message = userMessage.toLowerCase();\n    \n    // Find matching response based on keywords\n    let response = \"I understand you're asking about this policy. Let me provide you with the most relevant information based on the policy document.\";\n    \n    if (message.includes('eligible') || message.includes('eligibility')) {\n      response = chatResponses[\"who is eligible\"][0];\n    } else if (message.includes('benefit') || message.includes('what do i get')) {\n      response = chatResponses[\"what are the benefits\"][0];\n    } else if (message.includes('apply') || message.includes('how to')) {\n      response = chatResponses[\"how do i apply\"][0];\n    } else if (message.includes('launch') || message.includes('when')) {\n      response = chatResponses[\"when was this policy launched\"][0];\n    } else if (message.includes('budget') || message.includes('cost') || message.includes('fund')) {\n      response = chatResponses[\"what is the budget\"][0];\n    }\n    \n    return response;\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsTyping(true);\n\n    // Simulate AI thinking time\n    setTimeout(() => {\n      const aiResponse = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: simulateAIResponse(inputValue.trim()),\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 1500);\n  };\n\n  const handleQuickQuestion = (question) => {\n    setInputValue(question);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    return timestamp.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const quickQuestions = [\n    \"Who is eligible?\",\n    \"What are the benefits?\",\n    \"How do I apply?\",\n    \"When was this launched?\",\n    \"What is the budget?\"\n  ];\n\n  return (\n    <>\n      {/* Chat Button */}\n      <button\n        className=\"chat-button\"\n        onClick={() => onClose(!isOpen)}\n        aria-label=\"Open chat\"\n      >\n        <MessageCircle className=\"chat-button-icon\" />\n        {messages.length > 1 && (\n          <span className=\"chat-notification-badge\">\n            {messages.length - 1}\n          </span>\n        )}\n      </button>\n\n      {/* Chat Panel */}\n      {isOpen && (\n        <>\n          {/* Overlay */}\n          <div \n            className=\"chat-overlay\"\n            onClick={() => onClose(false)}\n          />\n          \n          {/* Panel */}\n          <div className=\"chat-panel\">\n            {/* Header */}\n            <div className=\"chat-header\">\n              <div className=\"chat-header-content\">\n                <div className=\"chat-header-icon\">\n                  <Bot />\n                </div>\n                <div className=\"chat-header-text\">\n                  <h3>Ask about this policy</h3>\n                  <p>AI Assistant</p>\n                </div>\n              </div>\n              <button\n                className=\"chat-close-button\"\n                onClick={() => onClose(false)}\n                aria-label=\"Close chat\"\n              >\n                <X />\n              </button>\n            </div>\n\n            {/* Messages */}\n            <div className=\"chat-messages\">\n              {messages.map((message) => (\n                <div\n                  key={message.id}\n                  className={`chat-message chat-message-${message.type}`}\n                >\n                  <div className=\"chat-message-avatar\">\n                    {message.type === 'user' ? <User /> : <Bot />}\n                  </div>\n                  <div className=\"chat-message-content\">\n                    <div className=\"chat-message-text\">\n                      {message.content}\n                    </div>\n                    <div className=\"chat-message-time\">\n                      {formatTime(message.timestamp)}\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              {/* Typing Indicator */}\n              {isTyping && (\n                <div className=\"chat-message chat-message-ai\">\n                  <div className=\"chat-message-avatar\">\n                    <Bot />\n                  </div>\n                  <div className=\"chat-message-content\">\n                    <div className=\"typing-indicator\">\n                      <div className=\"typing-dots\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Quick Questions */}\n            {messages.length <= 1 && (\n              <div className=\"chat-quick-questions\">\n                <p className=\"quick-questions-title\">Try asking:</p>\n                <div className=\"quick-questions-grid\">\n                  {quickQuestions.map((question, index) => (\n                    <button\n                      key={index}\n                      className=\"quick-question-button\"\n                      onClick={() => handleQuickQuestion(question)}\n                    >\n                      {question}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Input */}\n            <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\n              <div className=\"chat-input-wrapper\">\n                <textarea\n                  ref={inputRef}\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  placeholder=\"Type your question...\"\n                  className=\"chat-input\"\n                  rows=\"1\"\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                      e.preventDefault();\n                      handleSendMessage(e);\n                    }\n                  }}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"chat-send-button\"\n                  disabled={!inputValue.trim() || isTyping}\n                >\n                  <Send className=\"send-icon\" />\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ChatPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}